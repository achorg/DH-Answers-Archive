<?xml version="1.0" encoding="UTF-8"?>
<!-- generator="bbPress/1.0.2" -->
<rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Digital Humanities Questions &#38; Answers &#187; Topic: Automatically Preparing Edge/Node Data for Gephi</title>
		<link>http://digitalhumanities.org/answers/topic/automatically-preparing-edgenode-data-for-gephi</link>
		<description>Digital Humanities Questions &amp; Answers &#187; Topic: Automatically Preparing Edge/Node Data for Gephi</description>
		<language>en-US</language>
		<pubDate>Wed, 12 Dec 2018 22:33:04 +0000</pubDate>
		<generator>http://bbpress.org/?v=1.0.2</generator>
		<textInput>
			<title><![CDATA[Search]]></title>
			<description><![CDATA[Search all topics from these forums.]]></description>
			<name>q</name>
			<link>http://digitalhumanities.org/answers/search.php</link>
		</textInput>
		<atom:link href="/rss/topic/automatically-preparing-edgenode-data-for-gephi/index.xml" rel="self" type="application/rss+xml" />

		<item>
			 
				<title>Michael Widner on "Automatically Preparing Edge/Node Data for Gephi"</title>
						<link>http://digitalhumanities.org/answers/topic/automatically-preparing-edgenode-data-for-gephi#post-1961</link>
			<pubDate>Thu, 04 Apr 2013 19:46:53 +0000</pubDate>
			<dc:creator>Michael Widner</dc:creator>
			<guid isPermaLink="false">1961@http://digitalhumanities.org/answers/</guid>
			<description>&#60;p&#62;A quick tip for anyone doing similar work. The Python library NetworkX (&#60;a href=&#34;http://networkx.github.com/&#34; rel=&#34;nofollow&#34;&#62;http://networkx.github.com/&#60;/a&#62;) makes it very easy to create graph files that Gephi (and other programs) can read. For example, it will output a GEXF for you from nodes and edges that you create programmatically. You can set the colors, size, and other attributes so that you can have your data formatted for display in Gephi without all the manual work that sometimes requires.
&#60;/p&#62;</description>
		</item>
		<item>
			 
				<title>Scott Weingart on "Automatically Preparing Edge/Node Data for Gephi"</title>
						<link>http://digitalhumanities.org/answers/topic/automatically-preparing-edgenode-data-for-gephi#post-1791</link>
			<pubDate>Tue, 13 Nov 2012 15:21:25 +0000</pubDate>
			<dc:creator>Scott Weingart</dc:creator>
			<guid isPermaLink="false">1791@http://digitalhumanities.org/answers/</guid>
			<description>&#60;p&#62;Great to hear it, looking forward to the results.
&#60;/p&#62;</description>
		</item>
		<item>
			 
				<title>Ryan Cordell on "Automatically Preparing Edge/Node Data for Gephi"</title>
						<link>http://digitalhumanities.org/answers/topic/automatically-preparing-edgenode-data-for-gephi#post-1790</link>
			<pubDate>Tue, 13 Nov 2012 15:00:05 +0000</pubDate>
			<dc:creator>Ryan Cordell</dc:creator>
			<guid isPermaLink="false">1790@http://digitalhumanities.org/answers/</guid>
			<description>&#60;p&#62;Thanks so much for your help on this, Scott. The plugin method seems to have worked, though I still need to clean up the resulting graph:&#60;/p&#62;
&#60;p&#62;&#60;a href=&#34;https://dl.dropbox.com/u/492930/Gephi%200.8.1%20beta%20-%20ChronAm-3000-2.gephi.png&#34; rel=&#34;nofollow&#34;&#62;https://dl.dropbox.com/u/492930/Gephi%200.8.1%20beta%20-%20ChronAm-3000-2.gephi.png&#60;/a&#62;
&#60;/p&#62;</description>
		</item>
		<item>
			 
				<title>Scott Weingart on "Automatically Preparing Edge/Node Data for Gephi"</title>
						<link>http://digitalhumanities.org/answers/topic/automatically-preparing-edgenode-data-for-gephi#post-1789</link>
			<pubDate>Tue, 13 Nov 2012 02:25:29 +0000</pubDate>
			<dc:creator>Scott Weingart</dc:creator>
			<guid isPermaLink="false">1789@http://digitalhumanities.org/answers/</guid>
			<description>&#60;p&#62;So, this is a slightly more complicated problem than it ought to be. Instead of importing a network as an edge list, you have to import your data as separate node and edge lists, as described here: &#60;a href=&#34;https://gephi.org/users/supported-graph-formats/spreadsheet/&#34; rel=&#34;nofollow&#34;&#62;https://gephi.org/users/supported-graph-formats/spreadsheet/&#60;/a&#62;&#60;/p&#62;
&#60;p&#62;In the node list, you'll need to add node attributes (an extra column) that labels the 'type' of the node; whether it is a newspaper title or an ID. Once that network is loaded, you should be able to follow Shawn's steps.
&#60;/p&#62;</description>
		</item>
		<item>
			 
				<title>Ryan Cordell on "Automatically Preparing Edge/Node Data for Gephi"</title>
						<link>http://digitalhumanities.org/answers/topic/automatically-preparing-edgenode-data-for-gephi#post-1787</link>
			<pubDate>Mon, 12 Nov 2012 19:58:53 +0000</pubDate>
			<dc:creator>Ryan Cordell</dc:creator>
			<guid isPermaLink="false">1787@http://digitalhumanities.org/answers/</guid>
			<description>&#60;p&#62;Right, Scott, two sides of the same network: one with texts themselves as nodes and the other with newspaper titles as nodes. What I'm asking for help on is your recommendation: &#34;create a bimodal network.&#34; Should I import my spreadsheet into Gephi as an edge graph, with the IDs as source and the Newspaper titles as target, and then use the plugin Shawn references to convert that graph to a 1-mode network?
&#60;/p&#62;</description>
		</item>
		<item>
			 
				<title>Scott Weingart on "Automatically Preparing Edge/Node Data for Gephi"</title>
						<link>http://digitalhumanities.org/answers/topic/automatically-preparing-edgenode-data-for-gephi#post-1786</link>
			<pubDate>Mon, 12 Nov 2012 19:31:06 +0000</pubDate>
			<dc:creator>Scott Weingart</dc:creator>
			<guid isPermaLink="false">1786@http://digitalhumanities.org/answers/</guid>
			<description>&#60;p&#62;I'm not completely clear what you're looking for by the descriptions, so let me try to re-word it. Do you mean you're looking for how pairs of reprinted texts co-occur based on which publications they share? And then you're looking for how pairs of newspaper titles connect to one another, based on which texts they share? So, two sides of the same network?&#60;/p&#62;
&#60;p&#62;If that's the case, the first thing you should do is create a bimodal network. That is, every edge goes from a newspaper title to a reprinted text. You can then follow Shawn's steps here: &#60;a href=&#34;http://electricarchaeology.ca/2012/04/04/converting-2-mode-with-multimodal-plugin-for-gephi/&#34; rel=&#34;nofollow&#34;&#62;http://electricarchaeology.ca/2012/04/04/converting-2-mode-with-multimodal-plugin-for-gephi/&#60;/a&#62; to create text-text networks or newspaper-newspaper networks.
&#60;/p&#62;</description>
		</item>
		<item>
			 
				<title>Ryan Cordell on "Automatically Preparing Edge/Node Data for Gephi"</title>
						<link>http://digitalhumanities.org/answers/topic/automatically-preparing-edgenode-data-for-gephi#post-1785</link>
			<pubDate>Mon, 12 Nov 2012 18:51:15 +0000</pubDate>
			<dc:creator>Ryan Cordell</dc:creator>
			<guid isPermaLink="false">1785@http://digitalhumanities.org/answers/</guid>
			<description>&#60;p&#62;Okay,&#60;/p&#62;
&#60;p&#62;I've done some work with Gephi lately, but I find myself with a problem I can't quite solve. I work on reprinting networks, and thus far have generated network graphs from spreadsheets of reprinting with the original newspaper in one column (source) and reprinting newspaper in the second (target). Import edge table--&#38;gt;Gephi creates a pretty graph.&#60;/p&#62;
&#60;p&#62;I now have a much larger spreadsheet generated from a text-mining experiment I've started with a colleague in computer science. This  spreadsheet includes for each found text: &#60;/p&#62;
&#60;p&#62;an ID number identifying a particular reprinted text (ex: 8679:5136:18458:8488:5042:872:3924:2547:21444) &#124; Date of each reprinting &#124; URL of source text &#124; Name of each publication &#124; City and State of Publication &#124; Longitude of Publication &#124; the text matched&#60;/p&#62;
&#60;p&#62;So there might be 10 lines with the same ID number--the &#34;same text&#34;--but different values in the other columns for each new reprinting of that text we found. I want to generate two opposite but complementary graphs from this data: &#60;/p&#62;
&#60;p&#62;1.) in the first, the nodes would be Newspaper titles, and the edges would represent shared reprints--the ID field, I suppose. In other words, edges would be drawn between papers that reprinted the same text. Edges would be larger the more texts the two shared. I suspect there will be multi-stage process to prepare my data to do this, but I'm honestly not sure where to start.&#60;/p&#62;
&#60;p&#62;2.) in the second, the nodes would be individual reprinted texts (the ID field for now, though we're working on generating titles) and the edges would be publications. Edges would be drawn between texts that appeared in the same newspaper. &#60;/p&#62;
&#60;p&#62;Any help you can offer would be appreciated. I can't find a way to do this in one step through Gephi, so I'm sure there's some data massaging ahead of me.
&#60;/p&#62;</description>
		</item>

	</channel>
</rss>
